dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
taxda_c_sac %>%
filter(analyte == input$x) %>%
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
tax_c_sac <- taxda_sepyr %>%
filter(grepl('Sac', project)) %>%
count(station_name)
tax_c_sac
tax_c_sac <- taxda_sepyr %>%
filter(grepl('Sac', project))
tax_c_sac
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(project == "Quality Assurance Sample-LABQA	")
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(project == "Quality Assurance Sample-LABQA	") %>%
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
tax_c_sac <- taxda_sepyr %>%
filter(grepl('Sac', project)) %>%
filter(station_name == "Quality Assurance Sample-LABQA	")
tax_c_sac
tax_c_sac <- taxda_sepyr %>%
filter(grepl('Sac', project)) %>%
filter(station_name == "Quality Assurance Sample-LABQA")
tax_c_sac
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(project == "Quality Assurance Sample-LABQA") %>%
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(station_name == "Quality Assurance Sample-LABQA") %>%
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
tax_c_sac <- taxda_sepyr %>%
filter(grepl('Sac', project)) %>%
filter(station_name == "Quality Assurance Sample-LABQA") %>%
filter(analyte == "pH")
tax_c_sac
tax_c_sac <- taxda_sepyr %>%
filter(grepl('Sac', project)) %>%
count(station_name)
tax_c_sac
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(station_name == "Arcade Cr. at Mouth") %>%
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(station_name == "Mud Creek above Big Chico Creek") %>%
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
tax_c_sac <- taxda_sepyr %>%
filter(grepl('Sac', project)) %>%
cfilter(station_name == "Mud Creek above Big Chico Creek") %>%
count(analyte)
tax_c_sac <- taxda_sepyr %>%
filter(grepl('Sac', project)) %>%
filter(station_name == "Mud Creek above Big Chico Creek") %>%
count(analyte)
tax_c_sac
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(station_name == "Mud Creek above Big Chico Creek") %>%
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
tax_c_sac <- taxda_sepyr %>%
filter(grepl('Sac', project))
tax_c_sac
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(station_name == "American River at Discovery Park (SVWQC)")
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(station_name == "American River at Discovery Park (SVWQC)") %>%
ggplot(aes(x = year, fill = organism_name)) +
geom_density() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(station_name == "American River at Discovery Park (SVWQC)") %>%
ggplot(aes(x = year, y = result, fill = organism_name)) +
geom_histogram() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(station_name == "American River at Discovery Park (SVWQC)") %>%
ggplot(aes(x = year, y = result, fill = organism_name)) +
geom_col() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(station_name == "American River at Discovery Park (SVWQC)") %>%
ggplot(aes(x = year, y = result, fill = organism_name)) +
geom_col(position = "dodge") +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
ui <-
dashboardPage(
dashboardHeader(title = "Analyte"),
dashboardSidebar(disable =  T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Analyte", choices = c("Survival", "Oxygen, Dissolved, Total", "pH"),
selected = "pH"),
),
box(title = "Plot of Analyte", width = 9,
plotOutput("plot", width = "600px", height = "500px"))
)
)
)
server <- function(input, output,session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
tax_c_sac %>%
filter(analyte == input$x) %>%
filter(station_name == "American River at Discovery Park (SVWQC)") %>%
ggplot(aes(x = year, y = result, fill = organism_name)) +
geom_col() +
labs(x = "Year", y= "Result") +
theme_classic(base_size = 18)
})
}
shinyApp(ui, server)
View(taxda_sep)
View(taxda_sep)
View(taxda_sepyr)
tax_c_sac <- taxda_sepyr %>%
filter(grepl('Sac', project)) %>%
filter(station_name == "Mud Creek above Big Chico Creek") %>%
count(analyte)
tax_c_sac
