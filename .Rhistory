# session$onSessionEnded(stopApp)
#I don't know why but commenting this out seems to make it work
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = 'San Joaquin River Delta Data'),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = 'Plot Options', width = 3,
selectInput('y', 'Select Analyte', choices = c('pH', 'Oxygen, Dissolved, Not Recorded', 'Hardness as CaCO3, Not Recorded', 'Temperature', 'Ammonia as NH3, Unionized, Not Recorded'),
selected = 'pH')),
box(title = 'Plot of Analyte', width = 7,
plotOutput('plot', width = '400px', height = '400px')))
))
server <- function(input, output, session) {
output$plot <- renderPlot({
pelagic_org %>%
filter(analyte == input$y, sample_date <= '2010-12-31') %>%
ggplot(aes_string(x = 'sample_date', y = 'result')) +
geom_point(alpha = .5) +
geom_smooth(method = lm, color = 'yellow', alpha = .5) +
geom_smooth(color = 'red', alpha = .5) +
theme_light() +
labs(title = 'Analyte Change Over Time',
x = 'Date',
y = if (input$y == 'pH') {
'pH'
} else if (input$y == 'Temperature') {
'Temperature (Deg C)'
} else if (input$y == 'Oxygen, Dissolved, Not Recorded') {
'Dissolve Oxygen (mg/L)'
} else if (input$y == 'Hardness as CaCO3, Not Recorded') {
'Water Hardness Measured by CaCO3 Concentrations (mg/L)'
} else if (input$y == 'Ammonia as NH3, Unionized, Not Recorded') {
'Amount of NH3 in Water (mg/L)'
}
)
# session$onSessionEnded(stopApp)
#I don't know why but commenting this out seems to make it work
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = 'San Joaquin River Delta Data'),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = 'Plot Options', width = 3,
selectInput('y', 'Select Analyte', choices = c('pH', 'Oxygen, Dissolved, Not Recorded', 'Hardness as CaCO3, Not Recorded', 'Temperature', 'Ammonia as NH3, Unionized, Not Recorded'),
selected = 'pH')),
box(title = 'Plot of Analyte', width = 7,
plotOutput('plot', width = '400px', height = '400px')))
))
server <- function(input, output, session) {
output$plot <- renderPlot({
pelagic_org %>%
filter(analyte == input$y, sample_date <= '2010-12-31') %>%
ggplot(aes_string(x = 'sample_date', y = 'result')) +
geom_point(alpha = .5) +
geom_smooth(method = lm, color = 'yellow', alpha = .5) +
geom_smooth(color = 'red', alpha = .5) +
theme_light() +
labs(title = 'Analyte Change Over Time',
x = 'Date',
y = if (input$y == 'pH') {
'pH'
} else if (input$y == 'Temperature') {
'Temperature (Deg C)'
} else if (input$y == 'Oxygen, Dissolved, Not Recorded') {
'Dissolve Oxygen (mg/L)'
} else if (input$y == 'Hardness as CaCO3, Not Recorded') {
'Water Hardness Measured by CaCO3 Concentrations (mg/L)'
} else if (input$y == 'Ammonia as NH3, Unionized, Not Recorded') {
'Amount of NH3 in Water (mg/L)'
}
)
# session$onSessionEnded(stopApp)
#I don't know why but commenting this out seems to make it work
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = 'San Joaquin River Delta Data'),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = 'Plot Options', width = 3,
selectInput('y', 'Select Analyte', choices = c('pH', 'Oxygen, Dissolved, Not Recorded', 'Hardness as CaCO3, Not Recorded', 'Temperature', 'Ammonia as NH3, Unionized, Not Recorded'),
selected = 'pH')),
box(title = 'Plot of Analyte', width = 7,
plotOutput('plot', width = '400px', height = '400px')))
))
server <- function(input, output, session) {
output$plot <- renderPlot({
pelagic_org %>%
filter(analyte == input$y, sample_date <= '2010-12-31') %>%
ggplot(aes_string(x = 'sample_date', y = 'result')) +
geom_point(alpha = .5) +
geom_smooth(method = lm, color = 'yellow', alpha = .5) +
geom_smooth(color = 'red', alpha = .5) +
theme_light() +
labs(title = 'Analyte Change Over Time',
x = 'Date',
y = if (input$y == 'pH') {
'pH'
} else if (input$y == 'Temperature') {
'Temperature (Deg C)'
} else if (input$y == 'Oxygen, Dissolved, Not Recorded') {
'Dissolve Oxygen (mg/L)'
} else if (input$y == 'Hardness as CaCO3, Not Recorded') {
'Water Hardness Measured by CaCO3 Concentrations (mg/L)'
} else if (input$y == 'Ammonia as NH3, Unionized, Not Recorded') {
'Amount of NH3 in Water (mg/L)'
}
)
# session$onSessionEnded(stopApp)
#I don't know why but commenting this out seems to make it work
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = 'San Joaquin River Delta Data'),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = 'Plot Options', width = 3,
selectInput('y', 'Select Analyte', choices = c('pH', 'Oxygen, Dissolved, Not Recorded', 'Hardness as CaCO3, Not Recorded', 'Temperature', 'Ammonia as NH3, Unionized, Not Recorded'),
selected = 'pH')),
box(title = 'Plot of Analyte', width = 7,
plotOutput('plot', width = '400px', height = '400px')))
))
server <- function(input, output, session) {
output$plot <- renderPlot({
pelagic_org %>%
filter(analyte == input$y, sample_date <= '2010-12-31') %>%
ggplot(aes_string(x = 'sample_date', y = 'result')) +
geom_point(alpha = .5) +
geom_smooth(method = lm, color = 'yellow', alpha = .5) +
geom_smooth(color = 'red', alpha = .5) +
theme_light() +
labs(title = 'Analyte Change Over Time',
x = 'Date',
y = if (input$y == 'pH') {
'pH'
} else if (input$y == 'Temperature') {
'Temperature (Deg C)'
} else if (input$y == 'Oxygen, Dissolved, Not Recorded') {
'Dissolve Oxygen (mg/L)'
} else if (input$y == 'Hardness as CaCO3, Not Recorded') {
'Water Hardness Measured by CaCO3 Concentrations (mg/L)'
} else if (input$y == 'Ammonia as NH3, Unionized, Not Recorded') {
'Amount of NH3 in Water (mg/L)'
}
)
# session$onSessionEnded(stopApp)
#I don't know why but commenting this out seems to make it work
})
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(naniar)
library(janitor)
library(skimr)
library(shiny)
library(shinydashboard)
library(lubridate)
library(ggmap)
taxda <- readr::read_csv("toxicity_davis.csv")
taxda_noNA <- taxda %>%
select(-c(group_samples, occupation_method, starting_bank, distance_from_bank, unit_distance_from_bank, stream_width, unit_stream_width, station_water_depth, unit_station_water_depth, hydro_mod, hydro_mod_loc, channel_width, upstream_length, downstream_length, total_reach))
taxda_sep <- taxda %>%
separate(organism_name, into = c('genus', 'species'), sep = ' ')
pelagic_org <- taxda_sep %>%
filter(grepl('Pelagic', project))
unique(pelagic_org$analyte)
#electrical conductivty
pelagic_econduct <- pelagic_org %>%
filter(analyte == 'ElectricalConductivity, Not Recorded')
#alkalinity as CaCO3
pelagic_alkalinity <- pelagic_org %>%
filter(analyte == 'Alkalinity as CaCO3, Not Recorded')
#no data for survival so excluded, same goes for weight
#taxda_survival <- pelagic_org %>%
#  filter(analyte == 'Survival')
pelagic_specific_conduct <- pelagic_org %>%
filter(analyte == 'SpecificConductivity, Not Recorded')
pelagic_reproduction <- pelagic_org %>%
filter(analyte == 'Reproduction')
pelagic_oxygen <- pelagic_org %>%
filter(analyte == 'Oxygen, Dissolved, Not Recorded')
pelagic_pH <- pelagic_org %>%
filter(analyte == 'pH')
pelagic_temp <- pelagic_org %>%
filter(analyte == 'Temperature')
miss_var_summary(taxda_survival)
ui <- dashboardPage(
dashboardHeader(title = 'San Joaquin River Delta Data'),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = 'Plot Options', width = 3,
selectInput('y', 'Select Analyte', choices = c('pH', 'Oxygen, Dissolved, Not Recorded', 'Hardness as CaCO3, Not Recorded', 'Temperature', 'Ammonia as NH3, Unionized, Not Recorded'),
selected = 'pH')),
box(title = 'Plot of Analyte', width = 7,
plotOutput('plot', width = '400px', height = '400px')))
))
server <- function(input, output, session) {
output$plot <- renderPlot({
pelagic_org %>%
filter(analyte == input$y, sample_date <= '2010-12-31') %>%
ggplot(aes_string(x = 'sample_date', y = 'result')) +
geom_point(alpha = .5) +
geom_smooth(method = lm, color = 'yellow', alpha = .5) +
geom_smooth(color = 'red', alpha = .5) +
theme_light() +
labs(title = 'Analyte Change Over Time',
x = 'Date',
y = if (input$y == 'pH') {
'pH'
} else if (input$y == 'Temperature') {
'Temperature (Deg C)'
} else if (input$y == 'Oxygen, Dissolved, Not Recorded') {
'Dissolve Oxygen (mg/L)'
} else if (input$y == 'Hardness as CaCO3, Not Recorded') {
'Water Hardness Measured by CaCO3 Concentrations (mg/L)'
} else if (input$y == 'Ammonia as NH3, Unionized, Not Recorded') {
'Amount of NH3 in Water (mg/L)'
}
)
# session$onSessionEnded(stopApp)
#I don't know why but commenting this out seems to make it work
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = 'San Joaquin Delta'),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = 'Plot Options', width = 3,
selectInput('y', 'Select Analyte', choices = c('pH', 'Oxygen, Dissolved, Not Recorded', 'Hardness as CaCO3, Not Recorded', 'Temperature', 'Ammonia as NH3, Unionized, Not Recorded'),
selected = 'pH')),
box(title = 'Plot of Analyte', width = 7,
plotOutput('plot', width = '400px', height = '400px')))
))
server <- function(input, output, session) {
output$plot <- renderPlot({
pelagic_org %>%
filter(analyte == input$y, sample_date <= '2010-12-31') %>%
ggplot(aes_string(x = 'sample_date', y = 'result')) +
geom_point(alpha = .5) +
geom_smooth(method = lm, color = 'yellow', alpha = .5) +
geom_smooth(color = 'red', alpha = .5) +
theme_light() +
labs(title = 'Analyte Change Over Time',
x = 'Date',
y = if (input$y == 'pH') {
'pH'
} else if (input$y == 'Temperature') {
'Temperature (Deg C)'
} else if (input$y == 'Oxygen, Dissolved, Not Recorded') {
'Dissolve Oxygen (mg/L)'
} else if (input$y == 'Hardness as CaCO3, Not Recorded') {
'Water Hardness Measured by CaCO3 Concentrations (mg/L)'
} else if (input$y == 'Ammonia as NH3, Unionized, Not Recorded') {
'Amount of NH3 in Water (mg/L)'
}
)
# session$onSessionEnded(stopApp)
#I don't know why but commenting this out seems to make it work
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = 'San Joaquin Delta'),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = 'Plot Options', width = 3,
selectInput('y', 'Select Analyte', choices = c('pH', 'Oxygen, Dissolved, Not Recorded', 'Hardness as CaCO3, Not Recorded', 'Temperature', 'Ammonia as NH3, Unionized, Not Recorded'),
selected = 'pH')),
box(title = 'Plot of Analyte', width = 7,
plotOutput('plot', width = '400px', height = '400px')))
))
server <- function(input, output, session) {
output$plot <- renderPlot({
pelagic_org %>%
filter(analyte == input$y, sample_date <= '2010-12-31') %>%
ggplot(aes_string(x = 'sample_date', y = 'result')) +
geom_point(alpha = .5) +
geom_smooth(method = lm, color = 'yellow', alpha = .5) +
geom_smooth(color = 'red', alpha = .5) +
theme_light() +
labs(title = 'Analyte Change Over Time',
x = 'Date',
y = if (input$y == 'pH') {
'pH'
} else if (input$y == 'Temperature') {
'Temperature (Deg C)'
} else if (input$y == 'Oxygen, Dissolved, Not Recorded') {
'Dissolve Oxygen (mg/L)'
} else if (input$y == 'Hardness as CaCO3, Not Recorded') {
'Water Hardness Measured by CaCO3 Concentrations (mg/L)'
} else if (input$y == 'Ammonia as NH3, Unionized, Not Recorded') {
'Amount of NH3 in Water (mg/L)'
}
)
# session$onSessionEnded(stopApp)
#I don't know why but commenting this out seems to make it work
})
}
shinyApp(ui, server)
library(tidyverse)
library(shiny)
library(shinydashboard)
pelagic_org <- read.csv('pelagic_org.csv')
ui <- dashboardPage(
dashboardHeader(title = 'San Joaquin River Delta Data'),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = 'Plot Options', width = 3,
selectInput('y', 'Select Analyte', choices = c('pH', 'Oxygen, Dissolved, Not Recorded', 'Hardness as CaCO3, Not Recorded', 'Temperature', 'Ammonia as NH3, Unionized, Not Recorded'),
selected = 'pH')),
box(title = 'Plot of Analyte', width = 7,
plotOutput('plot', width = '400px', height = '400px')))
))
server <- function(input, output, session) {
output$plot <- renderPlot({
pelagic_org %>%
filter(analyte == input$y, sample_date <= '2010-12-31') %>%
ggplot(aes_string(x = 'sample_date', y = 'result')) +
geom_point(alpha = .5) +
geom_smooth(method = lm, color = 'yellow', alpha = .5) +
geom_smooth(color = 'red', alpha = .5) +
theme_light() +
labs(title = 'Analyte Change Over Time',
x = 'Date',
y = if (input$y == 'pH') {
'pH'
} else if (input$y == 'Temperature') {
'Temperature (Deg C)'
} else if (input$y == 'Oxygen, Dissolved, Not Recorded') {
'Dissolve Oxygen (mg/L)'
} else if (input$y == 'Hardness as CaCO3, Not Recorded') {
'Water Hardness Measured by CaCO3 Concentrations (mg/L)'
} else if (input$y == 'Ammonia as NH3, Unionized, Not Recorded') {
'Amount of NH3 in Water (mg/L)'
}
)
# session$onSessionEnded(stopApp)
#I don't know why but commenting this out seems to make it work
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = 'San Joaquin Delta'),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = 'Plot Options', width = 3,
selectInput('y', 'Select Analyte', choices = c('pH', 'Oxygen, Dissolved, Not Recorded', 'Hardness as CaCO3, Not Recorded', 'Temperature', 'Ammonia as NH3, Unionized, Not Recorded'),
selected = 'pH')),
box(title = 'Plot of Analyte', width = 7,
plotOutput('plot', width = '400px', height = '400px')))
))
server <- function(input, output, session) {
output$plot <- renderPlot({
pelagic_org %>%
filter(analyte == input$y, sample_date <= '2010-12-31') %>%
ggplot(aes_string(x = 'sample_date', y = 'result')) +
geom_point(alpha = .5) +
geom_smooth(method = lm, color = 'yellow', alpha = .5) +
geom_smooth(color = 'red', alpha = .5) +
theme_light() +
labs(title = 'Analyte Change Over Time',
x = 'Date',
y = if (input$y == 'pH') {
'pH'
} else if (input$y == 'Temperature') {
'Temperature (Deg C)'
} else if (input$y == 'Oxygen, Dissolved, Not Recorded') {
'Dissolve Oxygen (mg/L)'
} else if (input$y == 'Hardness as CaCO3, Not Recorded') {
'Water Hardness Measured by CaCO3 Concentrations (mg/L)'
} else if (input$y == 'Ammonia as NH3, Unionized, Not Recorded') {
'Amount of NH3 in Water (mg/L)'
}
)
# session$onSessionEnded(stopApp)
#I don't know why but commenting this out seems to make it work
})
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(naniar)
library(janitor)
library(skimr)
library(shiny)
library(shinydashboard)
library(lubridate)
library(ggmap)
taxda <- readr::read_csv("toxicity_davis.csv")
taxda_noNA <- taxda %>%
select(-c(group_samples, occupation_method, starting_bank, distance_from_bank, unit_distance_from_bank, stream_width, unit_stream_width, station_water_depth, unit_station_water_depth, hydro_mod, hydro_mod_loc, channel_width, upstream_length, downstream_length, total_reach))
taxda_sep <- taxda %>%
separate(organism_name, into = c('genus', 'species'), sep = ' ')
pelagic_org <- taxda_sep %>%
filter(grepl('Pelagic', project))
unique(pelagic_org$analyte)
#electrical conductivty
pelagic_econduct <- pelagic_org %>%
filter(analyte == 'ElectricalConductivity, Not Recorded')
#alkalinity as CaCO3
pelagic_alkalinity <- pelagic_org %>%
filter(analyte == 'Alkalinity as CaCO3, Not Recorded')
#no data for survival so excluded, same goes for weight
#taxda_survival <- pelagic_org %>%
#  filter(analyte == 'Survival')
pelagic_specific_conduct <- pelagic_org %>%
filter(analyte == 'SpecificConductivity, Not Recorded')
pelagic_reproduction <- pelagic_org %>%
filter(analyte == 'Reproduction')
pelagic_oxygen <- pelagic_org %>%
filter(analyte == 'Oxygen, Dissolved, Not Recorded')
pelagic_pH <- pelagic_org %>%
filter(analyte == 'pH')
pelagic_temp <- pelagic_org %>%
filter(analyte == 'Temperature')
miss_var_summary(taxda_survival)
ui <- dashboardPage(
dashboardHeader(title = 'San Joaquin Delta'),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = 'Plot Options', width = 3,
selectInput('y', 'Select Analyte', choices = c('pH', 'Oxygen, Dissolved, Not Recorded', 'Hardness as CaCO3, Not Recorded', 'Temperature', 'Ammonia as NH3, Unionized, Not Recorded'),
selected = 'pH')),
box(title = 'Plot of Analyte', width = 7,
plotOutput('plot', width = '400px', height = '400px')))
))
server <- function(input, output, session) {
output$plot <- renderPlot({
pelagic_org %>%
filter(analyte == input$y, sample_date <= '2010-12-31') %>%
ggplot(aes_string(x = 'sample_date', y = 'result')) +
geom_point(alpha = .5) +
geom_smooth(method = lm, color = 'yellow', alpha = .5) +
geom_smooth(color = 'red', alpha = .5) +
theme_light() +
labs(title = 'Analyte Change Over Time',
x = 'Date',
y = if (input$y == 'pH') {
'pH'
} else if (input$y == 'Temperature') {
'Temperature (Deg C)'
} else if (input$y == 'Oxygen, Dissolved, Not Recorded') {
'Dissolve Oxygen (mg/L)'
} else if (input$y == 'Hardness as CaCO3, Not Recorded') {
'Water Hardness Measured by CaCO3 Concentrations (mg/L)'
} else if (input$y == 'Ammonia as NH3, Unionized, Not Recorded') {
'Amount of NH3 in Water (mg/L)'
}
)
# session$onSessionEnded(stopApp)
#I don't know why but commenting this out seems to make it work
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = 'San Joaquin Delta'),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = 'Plot Options', width = 3,
selectInput('y', 'Select Analyte', choices = c('pH', 'Oxygen, Dissolved, Not Recorded', 'Hardness as CaCO3, Not Recorded', 'Temperature', 'Ammonia as NH3, Unionized, Not Recorded'),
selected = 'pH')),
box(title = 'Plot of Analyte', width = 7,
plotOutput('plot', width = '400px', height = '400px')))
))
server <- function(input, output, session) {
output$plot <- renderPlot({
pelagic_org %>%
filter(analyte == input$y, sample_date <= '2010-12-31') %>%
ggplot(aes_string(x = 'sample_date', y = 'result')) +
geom_point(alpha = .5) +
geom_smooth(method = lm, color = 'yellow', alpha = .5) +
geom_smooth(color = 'red', alpha = .5) +
theme_light() +
labs(title = 'Analyte Change Over Time',
x = 'Date',
y = if (input$y == 'pH') {
'pH'
} else if (input$y == 'Temperature') {
'Temperature (Deg C)'
} else if (input$y == 'Oxygen, Dissolved, Not Recorded') {
'Dissolve Oxygen (mg/L)'
} else if (input$y == 'Hardness as CaCO3, Not Recorded') {
'Water Hardness Measured by CaCO3 Concentrations (mg/L)'
} else if (input$y == 'Ammonia as NH3, Unionized, Not Recorded') {
'Amount of NH3 in Water (mg/L)'
}
)
# session$onSessionEnded(stopApp)
#I don't know why but commenting this out seems to make it work
})
}
shinyApp(ui, server)
